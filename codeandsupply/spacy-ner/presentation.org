* Natural Language Processing
** Stop Words
** Entity Recognition
** Parsing Human Languages
** Real Parsing
   This is mostly a note about nltk having a CFG parser but
that parser is infinately less (generally) useful than
something like Lark.
* Tools for NLP in Python
** NLTK
   This is one of the most mature and widley used
frameworks for NLP
** Spacy
   This is the fastest.  And has, IMHO, a great syntax
* Install Spacy
#+begin_src sh
pip install spacy
python -m spacy download en
#+end_src
* Demo of Basic Spacy
** First, we must import and load
  #+begin_src python :results value
    import spacy
    nlp = spacy.load('en')
  #+end_src
** Now we can useit

* NER in Spacy
https://spacy.io/api/annotation
** gui tools:

https://prodi.gy/ from the creators of spacy

* Train a model in Spacy

you can also create a vm for this:
#+BEGIN_EXAMPLE
gcloud compute instances create cands -
-image-family ubuntu-1804-lts --image-project ubuntu-os-cloud --machine-type n1-highcpu-16
#+END_EXAMPLE

* Deploy the service
** Gcloud

#+BEGIN_EXAMPLE
   gcloud init
   gcloud container clusters create experimental-aone
   gcloud container clusters get-credentials experimental-aone
   kubectl run hello-server --image gcr.io/google-samples/hello-app:1.0 --port 8080
   kubectl expose deployment hello-server --type "LoadBalancer"
   kubectl get service hello-server
   curl http://<HOSTNAME>:8080/
#+END_EXAMPLE

#+begin_src sh :results value
curl -s "http://127.0.0.1:8000/stemmer?source=Bill+is+a+nice+guy" 
#+end_src

#+begin_src sh :results value
curl -s http://127.0.0.1:8000/ents?fragment=Bill+is+a+nice+guy |jq
#+end_src

#+begin_src sh :results value
curl -s "http://localhost:8000/ents?custom=1&fragment=Gina+has+often+joined+me+and+other+senior+national+security+leaders+for+intelligence+briefings+to+President+Trump"
#+end_src

#+RESULTS:
| bill":"PROPN | NOUN | ADJ |

